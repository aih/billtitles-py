"""initial

Revision ID: 5b305dbc57d6
Revises: 
Create Date: 2022-04-05 10:07:51.978304

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = "5b305dbc57d6"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bill",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("length", sa.Integer(), nullable=True),
        sa.Column(
            "billnumber", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "version", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "billnumber", "version", name="billnumber_version"
        ),
    )
    op.create_index(
        op.f("ix_bill_billnumber"), "bill", ["billnumber"], unique=False
    )
    op.create_index(op.f("ix_bill_id"), "bill", ["id"], unique=False)
    op.create_index(op.f("ix_bill_length"), "bill", ["length"], unique=False)
    op.create_index(op.f("ix_bill_version"), "bill", ["version"], unique=False)
    op.create_table(
        "titles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_titles_id"), "titles", ["id"], unique=False)
    op.create_index(op.f("ix_titles_title"), "titles", ["title"], unique=False)
    op.create_table(
        "bill_titles",
        sa.Column("title_id", sa.Integer(), nullable=False),
        sa.Column("bill_id", sa.Integer(), nullable=False),
        sa.Column("is_for_whole_bill", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["bill_id"],
            ["bill.id"],
        ),
        sa.ForeignKeyConstraint(
            ["title_id"],
            ["titles.id"],
        ),
        sa.PrimaryKeyConstraint("title_id", "bill_id"),
    )
    op.create_index(
        op.f("ix_bill_titles_bill_id"),
        "bill_titles",
        ["bill_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_bill_titles_is_for_whole_bill"),
        "bill_titles",
        ["is_for_whole_bill"],
        unique=False,
    )
    op.create_index(
        op.f("ix_bill_titles_title_id"),
        "bill_titles",
        ["title_id"],
        unique=False,
    )
    op.create_table(
        "billtobill",
        sa.Column("reasonsstring", sa.VARCHAR(length=100), nullable=True),
        sa.Column("bill_id", sa.Integer(), nullable=False),
        sa.Column("bill_to_id", sa.Integer(), nullable=False),
        sa.Column("score_es", sa.Float(), nullable=True),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("score_to", sa.Float(), nullable=True),
        sa.Column(
            "identified_by", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("sections_num", sa.Integer(), nullable=True),
        sa.Column("sections_match", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["bill_id"],
            ["bill.id"],
        ),
        sa.ForeignKeyConstraint(
            ["bill_to_id"],
            ["bill.id"],
        ),
        sa.PrimaryKeyConstraint("bill_id", "bill_to_id"),
    )
    op.create_index(
        op.f("ix_billtobill_bill_id"), "billtobill", ["bill_id"], unique=False
    )
    op.create_index(
        op.f("ix_billtobill_bill_to_id"),
        "billtobill",
        ["bill_to_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billtobill_identified_by"),
        "billtobill",
        ["identified_by"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billtobill_score"), "billtobill", ["score"], unique=False
    )
    op.create_index(
        op.f("ix_billtobill_score_es"),
        "billtobill",
        ["score_es"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billtobill_score_to"),
        "billtobill",
        ["score_to"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billtobill_sections_match"),
        "billtobill",
        ["sections_match"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billtobill_sections_num"),
        "billtobill",
        ["sections_num"],
        unique=False,
    )
    op.create_table(
        "sectionitem",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bill_id", sa.Integer(), nullable=True),
        sa.Column(
            "section_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("label", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("header", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("length", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bill_id"],
            ["bill.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "bill_id", "section_id", name="billnumber_version_section_id"
        ),
    )
    op.create_index(
        op.f("ix_sectionitem_bill_id"),
        "sectionitem",
        ["bill_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_sectionitem_header"), "sectionitem", ["header"], unique=False
    )
    op.create_index(
        op.f("ix_sectionitem_id"), "sectionitem", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_sectionitem_label"), "sectionitem", ["label"], unique=False
    )
    op.create_index(
        op.f("ix_sectionitem_length"), "sectionitem", ["length"], unique=False
    )
    op.create_index(
        op.f("ix_sectionitem_section_id"),
        "sectionitem",
        ["section_id"],
        unique=False,
    )
    op.create_table(
        "sectiontosection",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_to", sa.Integer(), nullable=False),
        sa.Column("score_es", sa.Float(), nullable=True),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("score_to", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["sectionitem.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_to"],
            ["sectionitem.id"],
        ),
        sa.PrimaryKeyConstraint("id", "id_to"),
    )
    op.create_index(
        op.f("ix_sectiontosection_id"),
        "sectiontosection",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_sectiontosection_id_to"),
        "sectiontosection",
        ["id_to"],
        unique=False,
    )
    op.create_index(
        op.f("ix_sectiontosection_score"),
        "sectiontosection",
        ["score"],
        unique=False,
    )
    op.create_index(
        op.f("ix_sectiontosection_score_es"),
        "sectiontosection",
        ["score_es"],
        unique=False,
    )
    op.create_index(
        op.f("ix_sectiontosection_score_to"),
        "sectiontosection",
        ["score_to"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_sectiontosection_score_to"), table_name="sectiontosection"
    )
    op.drop_index(
        op.f("ix_sectiontosection_score_es"), table_name="sectiontosection"
    )
    op.drop_index(
        op.f("ix_sectiontosection_score"), table_name="sectiontosection"
    )
    op.drop_index(
        op.f("ix_sectiontosection_id_to"), table_name="sectiontosection"
    )
    op.drop_index(
        op.f("ix_sectiontosection_id"), table_name="sectiontosection"
    )
    op.drop_table("sectiontosection")
    op.drop_index(op.f("ix_sectionitem_section_id"), table_name="sectionitem")
    op.drop_index(op.f("ix_sectionitem_length"), table_name="sectionitem")
    op.drop_index(op.f("ix_sectionitem_label"), table_name="sectionitem")
    op.drop_index(op.f("ix_sectionitem_id"), table_name="sectionitem")
    op.drop_index(op.f("ix_sectionitem_header"), table_name="sectionitem")
    op.drop_index(op.f("ix_sectionitem_bill_id"), table_name="sectionitem")
    op.drop_table("sectionitem")
    op.drop_index(op.f("ix_billtobill_sections_num"), table_name="billtobill")
    op.drop_index(
        op.f("ix_billtobill_sections_match"), table_name="billtobill"
    )
    op.drop_index(op.f("ix_billtobill_score_to"), table_name="billtobill")
    op.drop_index(op.f("ix_billtobill_score_es"), table_name="billtobill")
    op.drop_index(op.f("ix_billtobill_score"), table_name="billtobill")
    op.drop_index(op.f("ix_billtobill_identified_by"), table_name="billtobill")
    op.drop_index(op.f("ix_billtobill_bill_to_id"), table_name="billtobill")
    op.drop_index(op.f("ix_billtobill_bill_id"), table_name="billtobill")
    op.drop_table("billtobill")
    op.drop_index(op.f("ix_bill_titles_title_id"), table_name="bill_titles")
    op.drop_index(
        op.f("ix_bill_titles_is_for_whole_bill"), table_name="bill_titles"
    )
    op.drop_index(op.f("ix_bill_titles_bill_id"), table_name="bill_titles")
    op.drop_table("bill_titles")
    op.drop_index(op.f("ix_titles_title"), table_name="titles")
    op.drop_index(op.f("ix_titles_id"), table_name="titles")
    op.drop_table("titles")
    op.drop_index(op.f("ix_bill_version"), table_name="bill")
    op.drop_index(op.f("ix_bill_length"), table_name="bill")
    op.drop_index(op.f("ix_bill_id"), table_name="bill")
    op.drop_index(op.f("ix_bill_billnumber"), table_name="bill")
    op.drop_table("bill")
    # ### end Alembic commands ###
